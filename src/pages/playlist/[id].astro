---
import { CardPlayButton } from "@/components/CardPlayButton";
import { MusicsTable } from "@/components/MusicsTable";
import Layout from "@/layouts/Layout.astro";
import { allPlaylists, songs } from "@/lib/data";

const { id } = Astro.params;

const playlist = allPlaylists.find((playlist) => playlist.id === id);
const playListSongs = songs.filter(
  (song) => song.albumId === playlist?.albumId
);

const getPlaylistSongDuration = () => {
  const convertTimeIntoSeconds = (time: string) => {
    let hours = 0;
    let minutes = 0;
    let seconds = 0;
    if (time.split(":").length === 3) {
      hours = parseInt(time.split(":")[0], 10);
      minutes = parseInt(time.split(":")[1], 10);
      seconds = parseInt(time.split(":")[2], 10);
    } else {
      minutes = parseInt(time.split(":")[0], 10);
      seconds = parseInt(time.split(":")[1], 10);
    }
    return hours * 3600 + minutes * 60 + seconds;
  };

  const formatDuration = (seconds: number) => {
    const hours = Math.floor(seconds / 3600);
    const minutes = Math.floor((seconds % 3600) / 60);
    const sec = Math.floor(((seconds % 3600) / 60) % 60);
    if (hours > 0) {
      return `${hours} h, ${minutes} min and ${sec} sec`;
    } else {
      return `${minutes} min and ${sec} sec`;
    }
  };

  const totalPlayListDuration = playListSongs.reduce(
    (acc, song) => acc + convertTimeIntoSeconds(song.duration),
    0
  );

  return formatDuration(totalPlayListDuration);
};

const playlistDuration = getPlaylistSongDuration();
---

<Layout title="Spotify Clone">
  <div
    id="playlist-container"
    class="relative flex flex-col h-full bg-zinc-900 overflow-x-hidden bg-gradient-to-t from-50% from-zinc-900 via-zinc-900/80"
    style={`background-color: ${playlist?.color.accent}`}
    transition:name=`playlist ${id} box`
  >
    <header class="flex flex-row gap-8 px-6 mt-12">
      <picture class="aspect-square w-52 h-52 flex-none"
        ><img
          src={playlist?.cover}
          alt={`Cover of ${playlist?.title}`}
          class="object-cover w-full h-full shadow-lg"
          transition:name=`playlist ${id} image`
        />
      </picture>

      <div class="flex flex-col justify-between">
        <h2 class="flex flex-1 items-end">Playlist</h2>
        <div>
          <h1 class="text-5xl font-bold block text-white">
            <span transition:name=`playlist ${playlist?.id} title`>
              {playlist?.title}
            </span>
          </h1>
        </div>
        <div class="flex-1 flex items-end">
          <div class="text-sm text-gray-300 font-normal">
            <div transition:name=`playlist ${playlist?.id} artists`>
              <span>{playlist?.artists.join(", ")}</span>
            </div>
            <p class="mt-1">
              <span class="text-white">{playListSongs.length} songs</span>, {
                playlistDuration
              }
            </p>
          </div>
        </div>
      </div>
    </header>

    <div class="pl-6 pt-6">
      <CardPlayButton id={id} size="large" client:load />
    </div>
    <div class="relative z-10 px-6 pt-10"></div>
    <div
      class="absolute inset-0 bg-gradient-to-t from-zinc-900 via-zinc-900/80 -z-[1]"
    >
    </div>
    <section class="p-6">
      <MusicsTable songs={playListSongs} client:load />
    </section>
  </div>
</Layout>
